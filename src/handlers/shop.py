from aiogram import types, F
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, CallbackQuery
from aiogram.utils.formatting import Code, TextLink
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src import config
from src.handlers.commands import commands_router
from src.types import (ShopCallback, ShopEnum)
from src.utils import TextBuilder, reply_and_delete


def get_shop_keyboard():
    kb = InlineKeyboardBuilder()
    how_to_buy_btn = ShopCallback(menu=ShopEnum.HOW_TO_BUY)
    what_is_price_btn = ShopCallback(menu=ShopEnum.WHAT_IS_PRICE)
    where_money_go_btn = ShopCallback(menu=ShopEnum.WHERE_MONEY_GO)

    kb.row(InlineKeyboardButton(text="‚ùî –Ø–∫ –∫—É–ø–∏—Ç–∏?", callback_data=how_to_buy_btn.pack()))
    kb.row(InlineKeyboardButton(text="üí≤ –Ø–∫–∞ —Ü—ñ–Ω–∞?", callback_data=what_is_price_btn.pack()))
    kb.row(InlineKeyboardButton(text="üí≥ –ö—É–¥–∏ –ø—ñ–¥—É—Ç—å –≥—Ä–æ—à—ñ?", callback_data=where_money_go_btn.pack()))

    return kb


@commands_router.message(Command("shop"))
async def shop(message: types.Message):
    kb = get_shop_keyboard()

    await reply_and_delete(message, "üí≥ –•–æ—á–µ—à –±—ñ–ª—å—à–µ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó?\n"
                                    "–¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ —ó—ó –∫—É–ø–∏—Ç–∏",
                           reply_markup=kb.as_markup())


@commands_router.callback_query(ShopCallback.filter((F.menu == ShopEnum.HOW_TO_BUY)))
async def shop_how_to_buy(query: CallbackQuery):
    is_private = query.message.chat.type == "private"
    tb = TextBuilder()
    tb.add("–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –±–∞–Ω–∫—É: {bank}", bank=TextLink("send.monobank.ua", url=config.DONATE))
    tb.add("–†–æ–±–∏—Ç–µ –¥–æ–Ω–∞—Ç –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—É –≤–∞–º —Å—É–º—É, —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç–µ —Å–∫—Ä—ñ–Ω —Å–ø–ª–∞—Ç–∏ –≤ @k0k0sbot", new_line=True)
    tb.add("–ì–æ–ª–æ–≤–Ω–∞ —É–º–æ–≤–∞, –≤–∫–∞–∑–∞—Ç–∏ ID —á–∞—Ç—É –¥–µ –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ–ø–æ–≤–Ω–µ–Ω–Ω—è —Ä—É—Å–æ—Ñ–æ–±—ñ—ó "
           "–Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞—î—à —â–æ —Ü–µ —Ç–∞–∫–µ, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É —É –ø–æ—Ç—Ä—ñ–±–Ω–æ–º—É —á–∞—Ç—ñ"
           if is_private else
           "ID —Ü—å–æ–≥–æ —á–∞—Ç—É: {chat_id}", new_line=True, chat_id=Code(query.message.chat.id))
    tb.add("–ü—ñ—Å–ª—è —á–µ–∫–∞–π –ø–æ–∫–∏ –∞–¥–º—ñ–Ω–∏ –æ–±—Ä–æ–±–ª—è—Ç—å —Ç–≤—ñ–π –∑–∞–ø–∏—Ç", new_line=True)

    kb = InlineKeyboardBuilder()
    back_button = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")
    kb.row(back_button)

    await query.message.edit_text(tb.render(), reply_markup=kb.as_markup())


@commands_router.callback_query(ShopCallback.filter((F.menu == ShopEnum.WHAT_IS_PRICE)))
async def shop_what_is_price(query: CallbackQuery):
    tb = TextBuilder()
    tb.add("–ö—É—Ä—Å –≥—Ä–∏–≤–Ω—ñ –¥–æ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó 1:10")
    tb.add("100 –∫–≥ = 1 –≥—Ä–Ω", new_line=True)
    tb.add("1000 –∫–≥ - 10 –≥—Ä–Ω", new_line=True)
    tb.add("10000 –∫–≥ - 100 –≥—Ä–Ω", new_line=True)
    tb.add("–ë–µ—Ä–µ–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä—É—Å–æ—Ñ–æ–±—ñ—ó —ñ –¥—ñ–ª–∏–º–æ –Ω–∞ 100", new_line=True)
    tb.add("5000 –∫–≥ / 10 = 50 –≥—Ä–Ω", new_line=True)

    kb = InlineKeyboardBuilder()
    back_button = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")
    kb.row(back_button)

    await query.message.edit_text(tb.render(), reply_markup=kb.as_markup())


@commands_router.callback_query(ShopCallback.filter((F.menu == ShopEnum.WHERE_MONEY_GO)))
async def shop_where_money_go(query: CallbackQuery):
    tb = TextBuilder()
    tb.add("–†–æ–∑—Ä–æ–±–Ω–∏–∫ –±–æ—Ç–∞ –∑–∞—Ä–∞–∑ —Å–ª—É–∂–∏—Ç—å –≤ –ó–°–£. –Ñ–±–∞—à–µ –∫–∞—Ü–∞–ø—ñ–≤ —â–æ–¥–Ω—è "
           "(–ô–æ–≥–æ –∫–∞–Ω–∞–ª: {channel})", channel=TextLink("5011", url="https://t.me/ua5011"))
    tb.add("–ó—ñ–±—Ä–∞–Ω—ñ –≥—Ä–æ—à—ñ –ø—ñ–¥—É—Ç—å –Ω–∞ –¥–æ–ø–æ–º–æ–≥—É –∞—Ä—Ç–∏–ª–µ—Ä—ñ–π—Å—å–∫–æ–≥–æ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É", new_line=True)

    kb = InlineKeyboardBuilder()
    back_button = InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_shop")
    kb.row(back_button)

    await query.message.edit_text(tb.render(), reply_markup=kb.as_markup(), disable_web_page_preview=True)


@commands_router.callback_query(F.data == "back_to_shop")
async def back_to_shop(query: CallbackQuery):
    kb = get_shop_keyboard()
    await query.message.edit_text("üí≥ –•–æ—á–µ—à –±—ñ–ª—å—à–µ —Ä—É—Å–æ—Ñ–æ–±—ñ—ó?\n"
                                  "–¢—É—Ç —Ç–∏ –∑–º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—è —è–∫ —ó—ó –∫—É–ø–∏—Ç–∏", reply_markup=kb.as_markup())